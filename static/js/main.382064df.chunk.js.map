{"version":3,"sources":["components/Background.js","components/Navbar.js","components/TextEditor.js","components/DisplayOutput.js","components/TicTacToe.js","pages/Home.js","pages/FindPlayer.js","pages/Game.js","registerServiceWorker.js","index.js"],"names":["Background","props","componentDidMount","updateWindowDimensions","window","addEventListener","updateStyles","width","height","setState","main","backgroundColor","bind","state","heading","color","fontSize","removeEventListener","this","innerWidth","innerHeight","style","overflow","children","images","0","how","time","size","background","Component","Navbar_","fontFamily","idStyle","Navbar","Container","Col","Brand","xs","Row","playerId","TextEditor","modeSelector","mode","toLowerCase","onChange","value","setCode","theme","name","showPrintMargin","opacity","code","showGutter","highlightActiveLine","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","PureComponent","DisplayOutput","displayableOutput","temp","output","split","result","i","length","push","text","overflowY","Jumbotron","padding","globalStyles","customButton","resetButton","Square","Button","variant","className","onClick","Board","squares","renderSquare","React","TicTacToe","selectOnClick","disabled","handleClick","history","Array","fill","stepNumber","currPlayer","lines","a","b","c","player","setWinStatus","calculateWinner","setSquares","decrementCount","setGlobalBoardState","winner","Home","socket","io","connect","on","loading","id","localStorage","setItem","String","componentWillUnmount","buttonRedirect","redirect","findPlayer","borderColor","Spinner","animation","to","pathname","FindPlayer","inputRef","createRef","findPlayerActivate","error","player2","current","valid","emit","requested","requester","data","status","redirectNext","playerCharacter","move","gameId","cancelFinding","redirectHome","location","findContainer","inputTag","border","errorStyle","onKeyPress","event","key","ref","placeholder","maxlength","Math","floor","random","Game","boardSquares","setLanguage","language","setRightStatus","element","rightStatus","uploadCode","async","leftStatus","myHeaders","Headers","append","raw","JSON","stringify","input_text","stdin","problem","input","requestOptions","method","headers","body","fetch","json","response","difficulty","count","stdout","currentlyDisabled","setLeftState","leftHeader","Dropdown","Toggle","buttonStyle","Menu","map","val","index","Item","textEditor","leftLoading","verticalAlignLeft","successMessage","convertOutput","string","selectDifficulty","pickDifficulty","ButtonGroup","wrongMessage","display","title","message","decideLeftColumn","problemStatementTile","statement","outcome","gameOver","gameDisplay","decideRightColumn","rightColumn","displayMessage","reset","tempSquares","mainScreen","moveCounter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","Routing","exact","path","component","withRouter","ReactDOM","render","document","getElementById","URL","process","origin","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.382064df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Sky from \"react-sky\";\n\nclass Background extends Component {\n  constructor(props) {\n    super(props);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    this.state = {\n      width: 0,\n      height: 0,\n\n      main: {\n        height: 0,\n        width: 0,\n        backgroundColor: \"black\"\n      },\n      heading: { color: \"#149414\", fontSize: \"5rem\" }\n    };\n  }\n  componentDidMount = () => {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  };\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  updateStyles = (width, height) => {\n    this.setState({\n      main: {\n        height: height,\n        width: width,\n        backgroundColor: \"black\"\n      }\n    });\n  };\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n    this.updateStyles(window.innerWidth, window.innerHeight);\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          overflow: this.props.overflow,\n          height: this.state.height,\n          width: this.state.width\n        }}\n      >\n        <div\n          style={{\n            overflow: this.props.overflow,\n            height: this.state.height,\n            width: this.state.width\n          }}\n        >\n          {this.props.children ? this.props.children : \"\"}\n        </div>\n        <Sky\n          images={{\n            0: `https://vwoccasion.co.uk/wp-content/uploads/2017/01/bright-green-square.jpg`\n          }}\n          how={\n            100\n          } /* Pass the number of images Sky will render chosing randomly */\n          time={40} /* time of animation */\n          size={\"20px\"} /* size of the rendered images */\n          background={\"black\"} /* color of background */\n          style={{ height: this.state.height, width: this.state.width }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Background;\n","import React, { Component } from \"react\";\nimport { Navbar, Container, Col, Row } from \"react-bootstrap\";\n\nclass Navbar_ extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      heading: {\n        color: \"white\",\n        fontSize: \"4rem\",\n\n        fontFamily: '\"Hacked\", monospace'\n      },\n      idStyle: {\n        color: \"white\",\n        fontSize: \"1.3rem\"\n      }\n    };\n  }\n\n  render() {\n    return (\n      <Navbar style={{ color: \"red\" }}>\n        <Container>\n          <Col>\n            <Navbar.Brand style={this.state.heading}>HACK OFF</Navbar.Brand>\n          </Col>\n          <Col xs={6} />\n          <Col style={this.state.idStyle}>\n            <Row>PlayerId:</Row>\n            <Row>{this.props.playerId}</Row>\n          </Col>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Navbar_;\n","import React, { PureComponent } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/snippets/python\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-java\";\n\nclass TextEditor extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: \"python\"\n    };\n  }\n  modeSelector = () => {\n    let mode = this.props.mode.toLowerCase();\n    if (mode === \"C\" || mode === \"C++\") {\n      mode = \"java\";\n    }\n    this.setState({\n      mode: mode\n    });\n  };\n  onChange = value => {\n    this.props.setCode(value);\n  };\n  render() {\n    return (\n      <AceEditor\n        mode={this.state.mode}\n        theme=\"twilight\"\n        name=\"UNIQUE_ID_OF_DIV\"\n        fontSize={15}\n        showPrintMargin={true}\n        style={{\n          width: \"850px\",\n          opacity: 0.9,\n          color: \"white\"\n        }}\n        value={this.props.code}\n        onChange={this.onChange}\n        showGutter={true}\n        highlightActiveLine={true}\n        editorProps={{ $blockScrolling: true }}\n        setOptions={{\n          enableBasicAutocompletion: true,\n          enableLiveAutocompletion: true,\n          enableSnippets: false,\n          showLineNumbers: true,\n          tabSize: 4\n        }}\n      />\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\";\n\nclass DisplayOutput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: {\n        color: \"#149414\",\n        overflowY: \"scroll\"\n      }\n    };\n  }\n  displayableOutput = () => {\n    let temp = this.props.output.split(/\\n/g);\n    let result = [];\n    for (let i = 0; i < temp.length; i++) {\n      result.push(temp[i]);\n      if (temp.length !== i) {\n        result.push(<br></br>);\n      }\n    }\n    return result;\n  };\n\n  render() {\n    return (\n      <Container style={this.state.text}>\n        <Row>\n          <Col xs={2}>\n            <h5>Output:</h5>\n          </Col>\n          <Col>\n            <Jumbotron\n              style={{\n                background: \"none\",\n                padding: \"0\",\n                overflow: \"scroll\",\n                height: 60,\n                width: this.state.width * 0.5\n              }}\n            >\n              <div style={{}}>{this.displayableOutput()}</div>\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default DisplayOutput;\n","import React from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\n\nvar globalStyles = {\n  customButton: {\n    color: \"white\",\n    fontSize: \"4rem\",\n    height: \"100px\",\n    width: \"100px\"\n  },\n  resetButton: {\n    color: \"white\",\n    fontSize: \"2rem\"\n  }\n};\nfunction Square(props) {\n  return (\n    <Button\n      variant=\"success\"\n      className=\"square bg-transparent\"\n      style={globalStyles.customButton}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </Button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      // <Container className=\"text-center\">\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n      // </Container>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TicTacToe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      currPlayer: \"X\"\n    };\n  }\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        if (squares[a] === this.props.player) {\n          this.props.setWinStatus(\"win\");\n        } else if (squares[a] !== this.props.player) {\n          this.props.setWinStatus(\"lose\");\n        }\n\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  handleClick(i) {\n    const squares = this.props.squares;\n    if (this.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    let temp = this.props.squares;\n    temp[i] = this.props.player;\n    this.props.setSquares(this.props.player, i);\n    this.setState({\n      stepNumber: this.state.stepNumber + 1\n    });\n    this.props.decrementCount();\n\n    this.props.setGlobalBoardState(temp);\n  }\n  selectOnClick = () => {\n    if (!this.props.disabled) {\n      return i => this.handleClick(i);\n    } else {\n      return () => {};\n    }\n  };\n\n  render() {\n    const winner = this.calculateWinner(this.props.squares);\n\n    return (\n      <Container>\n        <Row>\n          <Container className=\"text-center\">\n            <Board\n              squares={this.props.squares}\n              onClick={this.selectOnClick()}\n            />\n          </Container>\n        </Row>\n        <Row style={{ height: \"50px\" }}>\n          <Container className=\"test-center\">{winner}</Container>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default TicTacToe;\n","import React, { Component } from \"react\";\n// import \"../../Main.css\";\nimport { Row, Container, Button, Spinner } from \"react-bootstrap\";\nimport io from \"socket.io-client\";\nimport { Background } from \"../components/Components\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    this.state = {\n      redirect: false,\n      idStyle: {\n        color: \"white\",\n        fontSize: \"2rem\"\n      },\n      findPlayer: {\n        color: \"white\",\n        fontSize: \"2rem\",\n        borderColor: \"white\"\n      },\n      loading: true,\n      heading: {\n        color: \"white\",\n        fontSize: \"8rem\",\n        \"font-family\": '\"Hacked\", monospace'\n      }\n    };\n  }\n\n  componentDidMount = () => {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n    var socket = io.connect(\"https://mysterious-citadel-29505.herokuapp.com/\");\n    socket.on(\"connect\", () => {\n      this.setState({\n        socket: socket,\n        loading: false,\n        playerId: socket.id\n      });\n      localStorage.setItem(\"HackOffSocket\", String(socket));\n    });\n  };\n  componentWillUnmount = () => {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  };\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  buttonRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n  render() {\n    return (\n      <Background>\n        <Container>\n          <Row style={{ height: this.state.height * 0.1 }} />\n          <Row>\n            <Container className=\"text-center\">\n              <h1 style={this.state.heading}>HACK OFF</h1>\n            </Container>\n          </Row>\n          <Row style={{ height: this.state.height * 0.025 }} />\n          {!this.state.loading\n            ? [\n                <Row>\n                  <Container className=\"text-center\" style={this.state.idStyle}>\n                    PlayerId: {this.state.playerId}\n                  </Container>\n                </Row>,\n\n                <Row style={{ height: this.state.height * 0.28 }} />,\n                <Row>\n                  <Container className=\"text-center\">\n                    <Button\n                      className=\"bg-transparent\"\n                      style={this.state.findPlayer}\n                      onClick={this.buttonRedirect}\n                    >\n                      Find Player\n                    </Button>\n                  </Container>\n                </Row>\n              ]\n            : [\n                <Row style={{ height: this.state.height * 0.2 }} />,\n                <Row>\n                  <Container className=\"text-center\">\n                    <Spinner\n                      animation=\"border\"\n                      style={{\n                        color: \"white\",\n                        height: this.state.height * 0.1,\n                        width: this.state.height * 0.1\n                      }}\n                    />\n                  </Container>\n                </Row>\n              ]}\n        </Container>\n        {this.state.redirect ? (\n          <Redirect\n            to={{\n              pathname: \"./findPlayer\",\n              socket: this.state.socket\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n      </Background>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component, createRef } from \"react\";\nimport { Background, Navbar } from \"../components/Components\";\nimport { Row, Col, Container, Button, Spinner } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nclass FindPlayer extends Component {\n  constructor(props) {\n    super(props);\n    let socket = \"\";\n    var redirectHome = false;\n    if (props.location.socket) {\n      socket = props.location.socket;\n    } else {\n      redirectHome = true;\n    }\n\n    this.state = {\n      error: false,\n      playerId: socket.id,\n      redirectHome: redirectHome,\n      socket: socket,\n      findContainer: {\n        color: \"white\",\n        fontSize: \"2rem\"\n      },\n      redirectNext: false,\n      loading: false,\n      inputTag: {\n        color: \"white\",\n        background: \"transparent\",\n        border: \"none\"\n      },\n      findPlayer: {\n        color: \"white\",\n        fontSize: \"1.5rem\",\n        borderColor: \"white\"\n      },\n      errorStyle: {\n        color: \"white\",\n        fontSize: \"1.5rem\"\n      }\n    };\n  }\n\n  componentDidMount = () => {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  };\n  componentWillUnmount = () => {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  };\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  inputRef = createRef();\n\n  findPlayerActivate = () => {\n    this.setState({\n      error: false\n    });\n    let player2 = this.inputRef.current.value;\n    let valid = true;\n    if (player2.length !== 20) {\n      valid = false;\n      this.setState({\n        error: \"User id not long enough\"\n      });\n    }\n    if (valid) {\n      this.setState({\n        loading: true\n      });\n      this.state.socket.emit(\"join_request\", {\n        requested: player2,\n        requester: this.state.socket.id\n      });\n      this.state.socket.on(\"join_request_response\", data => {\n        if (data.status === \"Ready\") {\n          this.setState({\n            redirectNext: true,\n            playerCharacter: data.move,\n            gameId: data.gameId\n          });\n        }\n      });\n    }\n  };\n  cancelFinding = () => {\n    this.state.socket.emit(\"cancel_wait\", \"\");\n    this.state.socket.on(\"cancel_wait_response\", data => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n  render() {\n    return (\n      <Background>\n        {this.state.redirectHome ? <Redirect to=\"./\" /> : \"\"}\n        <Navbar playerId={this.state.playerId} />\n        <Container>\n          <Row style={{ height: this.state.height * 0.2 }} />\n          <Row className=\"text-center\">\n            <Container className=\"text-center\" style={this.state.findContainer}>\n              <Col>\n                <input\n                  onKeyPress={event => {\n                    if (event.key === \"Enter\") {\n                      this.findPlayerActivate();\n                    }\n                  }}\n                  disabled={this.state.loading ? \"disabled\" : \"\"}\n                  ref={this.inputRef}\n                  placeholder=\"Friend's id...\"\n                  style={this.state.inputTag}\n                  maxlength=\"20\"\n                />\n              </Col>\n            </Container>\n          </Row>\n          <Row style={{ height: this.state.height * 0.1 }} />\n          <Row>\n            <Container className=\"text-center\">\n              {this.state.loading ? (\n                <div>\n                  <Row>\n                    <Container className=\"text-center\">\n                      <Row>\n                        <Container\n                          style={{ color: \"white\" }}\n                          className=\"text-center\"\n                        >\n                          Waiting for your friend to join\n                        </Container>\n                      </Row>\n                      <Row>\n                        <Container\n                          style={{ color: \"white\" }}\n                          className=\"text-center\"\n                        >\n                          <h6>Tips:</h6>\n                          {\n                            [\n                              \"Hard questions give more moves but easy questions, can be solved quicker\",\n                              \"One hard question and you win\",\n                              \"Find me at github.com/ABHINAV112\",\n                              \"You will only be able to play if you solve a problem\",\n                              \"Easy questions give you 1 move, hard questions give 3 and medium 2\",\n                              \"While solving the questions there is only one input test case, read it in using stdin methods across each language\"\n                            ][Math.floor(Math.random() * 6)]\n                          }\n                        </Container>\n                      </Row>\n                    </Container>\n                  </Row>\n                  <Row>\n                    <Container className=\"text-center\">\n                      <Spinner animation=\"border\" style={{ color: \"white\" }} />\n                    </Container>\n                  </Row>\n                  <Row style={{ height: this.state.height * 0.05 }} />\n                  <Row>\n                    <Container className=\"text-center\">\n                      <Button\n                        className=\"bg-transparent\"\n                        style={this.state.findPlayer}\n                        onClick={this.cancelFinding}\n                      >\n                        Cancel\n                      </Button>\n                    </Container>\n                  </Row>\n                </div>\n              ) : (\n                <Button\n                  className=\"bg-transparent\"\n                  style={this.state.findPlayer}\n                  onClick={this.findPlayerActivate}\n                >\n                  Find Player\n                </Button>\n              )}\n            </Container>\n          </Row>\n          <Row style={{ height: this.state.height * 0.1 }} />\n          <Row>\n            <Container className=\"text-center\" style={this.state.errorStyle}>\n              {this.state.error ? `Error: ${this.state.error}` : \"\"}\n            </Container>\n          </Row>\n        </Container>\n        {this.state.redirectNext ? (\n          <Redirect\n            to={{\n              pathname: \"/game\",\n              socket: this.state.socket,\n              gameId: this.state.gameId,\n              playerCharacter: this.state.playerCharacter\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n      </Background>\n    );\n  }\n}\n\nexport default FindPlayer;\n","import React, { Component } from \"react\";\nimport {\n  Background,\n  Navbar,\n  TextEditor,\n  DisplayOutput,\n  TicTacToe\n} from \"../components/Components\";\nimport {\n  Row,\n  Col,\n  Container,\n  Dropdown,\n  Button,\n  ButtonGroup,\n  Spinner,\n  Jumbotron\n} from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    let socket = {};\n    let redirectHome = false;\n    this.setSquares = this.setSquares.bind(this);\n    this.setWinStatus = this.setWinStatus.bind(this);\n    this.setGlobalBoardState = this.setGlobalBoardState.bind(this);\n    this.decrementCount = this.decrementCount.bind(this);\n    this.setLeftState = this.setLeftState.bind(this);\n\n    if (props.location.socket) {\n      socket = props.location.socket;\n    } else {\n      // NOTE: remember to set this to true\n      redirectHome = true;\n    }\n\n    this.state = {\n      redirectHome: redirectHome,\n      playerId: socket.id,\n      playerCharacter: props.location.playerCharacter,\n      boardSquares: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      socket: socket,\n      rightStatus: \"Select Display\",\n      language: \"python\",\n      count: 0,\n      buttonStyle: { borderColor: \"white\", fontSize: \"1rem\" },\n      code: \"\",\n      currentlyDisabled: true,\n      output: \"\",\n      gameOver: !true,\n      leftStatus: \"pickQuestion\", //correctAnswer ,wrongAnswer,texteditor,pickQuestion,texteditor,\n      moveCounter: 0\n    };\n    this.setCode = this.setCode.bind(this);\n  }\n  componentDidMount = () => {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n    if (!this.state.redirectHome) {\n      this.state.socket.on(\"move\", data => {\n        this.setState({\n          boardSquares: data.move\n        });\n      });\n    }\n  };\n  componentWillUnmount = () => {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  };\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  setCode = code => {\n    this.setState({ code: code });\n  };\n  setLanguage = language => {\n    this.setState({\n      language: language\n    });\n  };\n  setRightStatus = element => {\n    this.setState({\n      rightStatus: element\n    });\n  };\n\n  setGlobalBoardState = boardSquares => {\n    this.setState({\n      boardSquares: boardSquares\n    });\n\n    var data = {\n      gameId: this.props.location.gameId,\n      move: boardSquares\n    };\n    this.state.socket.emit(\"move\", data);\n  };\n  uploadCode = async () => {\n    this.setState({\n      leftStatus: \"loading\"\n    });\n\n    let url = \"https://polar-bastion-87772.herokuapp.com/compile\";\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n      input_text: this.state.code,\n      language: this.state.language,\n      stdin: this.state.problem.input[0]\n    });\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw\n    };\n\n    let result = await (await fetch(url, requestOptions)).json();\n    if (result.error) {\n      this.setState({\n        response: result,\n        leftStatus: \"wrongAnswer\",\n        output: result.error\n      });\n      return;\n    }\n    // let compare = this.state.problem.output[0];\n    // let resultTemp = result.stdout.trim().split(\"\\n\")[0];\n\n    // if (compare !== resultTemp && compare !== 1) {\n\n    //   this.setState({\n    //     response: result,\n    //     leftStatus: \"wrongAnswer\",\n    //     output: result.stdout\n    //   });\n    //   return;\n    // }\n    if (this.state.difficulty === \"easy\") {\n      this.setState({\n        count: this.state.count + 1\n      });\n    } else if (this.state.difficulty === \"medium\") {\n      this.setState({\n        count: this.state.count + 2\n      });\n    }\n    if (this.state.difficulty === \"hard\") {\n      this.setState({\n        count: this.state.count + 3\n      });\n    }\n    this.setState({\n      response: result,\n      leftStatus: \"correctAnswer\",\n      output: result.stdout,\n      rightStatus: \"\",\n      currentlyDisabled: false\n    });\n  };\n  setLeftState = leftStatus => {\n    this.setState({\n      leftStatus: leftStatus\n    });\n  };\n\n  decrementCount = () => {\n    if (this.state.count === 1) {\n      this.setState({\n        currentlyDisabled: true,\n        rightStatus: \"\",\n        leftStatus: \"pickQuestion\"\n      });\n    }\n    this.setState({\n      count: this.state.count - 1\n    });\n  };\n\n  leftHeader = () => {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Container>\n              <Row style={{ color: \"white\", height: \"40px\" }}>\n                <Dropdown>\n                  <Dropdown.Toggle\n                    variant=\"success\"\n                    id=\"dropdown-basic\"\n                    className=\"bg-transparent\"\n                    style={this.state.buttonStyle}\n                  >\n                    {this.state.language}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    {[\"Python\", \"Java\", \"C\", \"C++\"].map((val, index) => {\n                      return (\n                        <Dropdown.Item\n                          key={\"language\" + index}\n                          onClick={() => this.setLanguage(val.toLowerCase())}\n                          style={this.state.buttonStyle}\n                        >\n                          {val}\n                        </Dropdown.Item>\n                      );\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Row>\n            </Container>\n          </Col>\n          <Col>\n            <Container>\n              <Dropdown>\n                <Dropdown.Toggle\n                  variant=\"success\"\n                  id=\"dropdown-basic\"\n                  className=\"bg-transparent\"\n                  style={this.state.buttonStyle}\n                >\n                  {this.state.rightStatus}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  {[\"Problem Statement\", \"Game Screen\"].map((val, index) => {\n                    return (\n                      <Dropdown.Item\n                        key={\"Option\" + index}\n                        onClick={() => {\n                          this.setRightStatus(val);\n                        }}\n                      >\n                        {val}\n                      </Dropdown.Item>\n                    );\n                  })}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Container>\n          </Col>\n          <Col>\n            <Container>\n              <Button\n                style={this.state.buttonStyle}\n                className=\"bg-transparent\"\n                variant=\"success\"\n                onClick={this.uploadCode}\n              >\n                Run Code\n              </Button>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n\n  textEditor = () => {\n    return (\n      <Col style={{ overflowY: \"scroll\" }}>\n        {this.leftHeader()}\n\n        <TextEditor\n          mode={this.state.language}\n          code={this.state.code}\n          setCode={this.setCode}\n        />\n\n        <DisplayOutput output={this.state.output} />\n      </Col>\n    );\n  };\n  leftLoading = () => {\n    return (\n      <Col>\n        {this.verticalAlignLeft()}\n        <Row>\n          <Container className=\"text-center\">\n            <h4 style={{ color: \"white\" }}>Running Code:</h4>\n          </Container>\n        </Row>\n        <Row>\n          <Container className=\"text-center\">\n            <Spinner animation=\"border\" style={{ color: \"white\" }} />\n          </Container>\n        </Row>\n      </Col>\n    );\n  };\n  successMessage = () => {\n    return (\n      <Col>\n        {this.verticalAlignLeft()}\n        <Row>\n          <Container className=\"text-center\">\n            <Row>\n              <Container className=\"text-center\">\n                <h3 style={{ color: \"white\" }}>Successful submission!</h3>\n              </Container>\n            </Row>\n            <Row>\n              <Container className=\"text-center\">\n                <Button\n                  style={this.state.buttonStyle}\n                  className=\"bg-transparent\"\n                  variant=\"success\"\n                  onClick={() => {\n                    this.setState({\n                      leftStatus: \"\",\n                      rightStatus: \"Game Screen\"\n                    });\n                  }}\n                >\n                  Play Move{\" \"}\n                </Button>\n              </Container>\n            </Row>\n          </Container>\n        </Row>\n      </Col>\n    );\n  };\n  convertOutput = string => {\n    let temp = string.split(/\\n/g);\n    let result = [];\n    for (let i = 0; i < temp.length; i++) {\n      result.push(temp[i]);\n      if (temp.length !== i) {\n        result.push(<br></br>);\n      }\n    }\n    return result;\n  };\n  selectDifficulty = difficulty => {\n    this.setState({\n      difficulty: difficulty\n    });\n    this.state.socket.emit(\"problem_request\", { difficulty: difficulty });\n\n    this.state.socket.on(\"problem_response\", problem => {\n      this.setState({\n        problem: problem,\n        leftStatus: \"texteditor\",\n        rightStatus: \"Problem Statement\"\n      });\n    });\n  };\n  pickDifficulty = () => {\n    return (\n      <Col>\n        {this.verticalAlignLeft()}\n        <Row>\n          <Container className=\"text-center\">\n            <h2 style={{ color: \"white\" }}>Select difficulty of problem</h2>\n          </Container>\n        </Row>\n        <Row>\n          <Container className=\"text-center\">\n            <ButtonGroup className=\"mt-3\">\n              <Button\n                variant=\"success\"\n                className=\"bg-transparent\"\n                style={this.buttonStyle}\n                onClick={() => this.selectDifficulty(\"easy\")}\n              >\n                Easy\n              </Button>\n              <Button\n                variant=\"success\"\n                className=\"bg-transparent\"\n                style={this.buttonStyle}\n                onClick={() => this.selectDifficulty(\"medium\")}\n              >\n                Medium\n              </Button>\n              <Button\n                variant=\"success\"\n                className=\"bg-transparent\"\n                style={this.buttonStyle}\n                onClick={() => this.selectDifficulty(\"hard\")}\n              >\n                Hard\n              </Button>\n            </ButtonGroup>\n          </Container>\n        </Row>\n      </Col>\n    );\n  };\n  wrongMessage = response => {\n    let display = {};\n    if (response.stdout) {\n      display.title = \"Wrong Answer\";\n      display.message = response.stdout;\n    } else {\n      display.title = \"Error in syntax\";\n      display.message = response.error;\n    }\n    return (\n      <Col>\n        <Jumbotron\n          style={{\n            background: \"none\",\n            padding: \"0\",\n            overflow: \"scroll\",\n            height: this.state.height * 0.8,\n            width: this.state.width * 0.5,\n            color: \"white\"\n          }}\n        >\n          <Container className=\"text-center\">\n            {this.verticalAlignLeft()}\n            <Row>\n              <Container className=\"text-center\">\n                <h3 style={{ color: \"white\" }}>{display.title}</h3>\n              </Container>\n            </Row>\n            <Row>\n              <Jumbotron style={{ background: \"none\" }} className=\"text-left\">\n                <Row style={{ color: \"white\" }}>\n                  <Col>Input:</Col>\n                  <Col>{this.state.problem.input}</Col>\n                </Row>\n                <Row style={{ color: \"white\" }}>\n                  <Col>Output:</Col>\n                  <Col>{this.convertOutput(display.message)}</Col>\n                </Row>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Container className=\"text-center\">\n                <Button\n                  style={this.state.buttonStyle}\n                  className=\"bg-transparent\"\n                  variant=\"success\"\n                  onClick={() => {\n                    this.setState({\n                      leftStatus: \"texteditor\"\n                    });\n                  }}\n                >\n                  Try again{\" \"}\n                </Button>\n              </Container>\n            </Row>\n          </Container>\n        </Jumbotron>\n      </Col>\n    );\n  };\n\n  verticalAlignLeft = () => {\n    if (this.state.leftStatus === \"wrongAnswer\") {\n      return <Row style={{ height: this.state.height * 0.15 }} />;\n    }\n    if (this.state.leftStatus !== \"texteditor\") {\n      return <Row style={{ height: this.state.height * 0.3 }} />;\n    }\n    return \"\";\n  };\n\n  decideLeftColumn = () => {\n    if (this.state.leftStatus === \"pickQuestion\") {\n      return this.pickDifficulty();\n    }\n    if (this.state.leftStatus === \"texteditor\") {\n      return this.textEditor();\n    }\n    if (this.state.leftStatus === \"loading\") {\n      return this.leftLoading();\n    }\n    if (this.state.leftStatus === \"correctAnswer\") {\n      return this.successMessage();\n    }\n    if (this.state.leftStatus === \"wrongAnswer\") {\n      return this.wrongMessage(this.state.response);\n    }\n  };\n  problemStatementTile = () => {\n    return (\n      <Col>\n        <Container>\n          <Jumbotron\n            style={{\n              background: \"none\",\n              padding: \"0\",\n              overflow: \"scroll\",\n              height: this.state.height * 0.8,\n              width: this.state.width * 0.5,\n              color: \"white\"\n            }}\n          >\n            <h2>Problem Statement</h2>\n            {this.convertOutput(this.state.problem.statement)}\n          </Jumbotron>\n        </Container>\n      </Col>\n    );\n  };\n  setWinStatus = outcome => {\n    this.setState({\n      outcome: outcome,\n      gameOver: true\n    });\n  };\n\n  gameDisplay = () => {\n    let result = [];\n    if (!this.state.currentlyDisabled) {\n      result.push(<Col xs={3}></Col>);\n    }\n    result.push(\n      <Col>\n        <Container>\n          <Jumbotron\n            style={{\n              background: \"none\",\n              padding: \"0\",\n              overflow: \"scroll\",\n              height: this.state.height * 0.8,\n              width: this.state.width * 0.5,\n              color: \"white\"\n            }}\n          >\n            <Container>\n              <Row>\n                <Container className=\"text-center\">\n                  <h2>Game:</h2>\n                </Container>\n              </Row>\n              <Row>\n                <Container className=\"text-center\">\n                  <TicTacToe\n                    squares={this.state.boardSquares}\n                    setSquares={this.setSquares}\n                    setWinStatus={this.setWinStatus}\n                    player={this.state.playerCharacter}\n                    setGlobalBoardState={this.setGlobalBoardState}\n                    disabled={this.state.currentlyDisabled}\n                    // disabled={false}\n                    setLeftState={this.setLeftState}\n                    decrementCount={this.decrementCount}\n                  />\n                </Container>\n              </Row>\n              <Row>\n                <Container className=\"text-center\">\n                  <h5>Number of moves:</h5>\n                  {this.state.count}\n                </Container>\n              </Row>\n            </Container>\n          </Jumbotron>\n        </Container>\n      </Col>\n    );\n    return result;\n  };\n\n  decideRightColumn = () => {\n    if (this.state.rightStatus === \"Problem Statement\") {\n      return this.problemStatementTile();\n    }\n    if (this.state.rightStatus === \"Game Screen\") {\n      return this.gameDisplay();\n    }\n  };\n\n  rightColumn = () => {\n    return <Col></Col>;\n  };\n  redirect = () => {\n    this.setState({\n      redirect: \"./findPlayer\"\n    });\n  };\n\n  gameOver = outcome => {\n    let displayMessage = \"Congratulations, you won!\";\n    if (outcome === \"lose\") {\n      displayMessage = \"Unfortunately, you got out hacked\";\n    }\n    return (\n      <Container>\n        <Row style={{ height: this.state.height * 0.2 }} />\n        <Row>\n          <Container className=\"text-center\" style={{ color: \"white\" }}>\n            <h1>Game Over:</h1>\n          </Container>\n        </Row>\n        <Row>\n          <Container className=\"text-center\" style={{ color: \"white\" }}>\n            <h3>{displayMessage}</h3>\n          </Container>\n        </Row>\n        <Row style={{ height: this.state.height * 0.1 }} />\n        <Row>\n          <Container className=\"text-center\">\n            <Button\n              onClick={this.redirect}\n              className=\"bg-transparent\"\n              style={this.state.buttonStyle}\n            >\n              <h4>Play Again</h4>\n            </Button>\n          </Container>\n        </Row>\n      </Container>\n    );\n  };\n\n  setSquares = (player, index, reset = false) => {\n    if (reset) {\n      this.setState({\n        boardSquares: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n      });\n    }\n    let tempSquares = this.state.boardSquares;\n    tempSquares[index] = player;\n    this.setState({\n      boardSquares: tempSquares\n    });\n  };\n\n  mainScreen = () => {\n    return (\n      <Row>\n        {this.decideLeftColumn()}\n        {this.decideRightColumn()}\n      </Row>\n    );\n  };\n\n  render() {\n    return (\n      <Background overflow=\"hidden\">\n        {this.state.redirectHome ? <Redirect to=\"/\" /> : \"\"}\n        <Navbar playerId={this.state.playerId} />\n\n        {this.state.gameOver\n          ? this.gameOver(this.state.outcome)\n          : this.mainScreen()}\n        {this.state.redirect ? <Redirect to={this.state.redirect} /> : \"\"}\n      </Background>\n    );\n  }\n}\n\nexport default Game;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Home, FindPlayer, Game } from \"./pages/Pages\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter\n} from \"react-router-dom\";\n\nclass Routing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={withRouter(Home)} />\n          <Route path=\"/findPlayer\" component={withRouter(FindPlayer)} />\n          <Route path=\"/game\" component={withRouter(Game)} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nReactDOM.render(<Routing />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}